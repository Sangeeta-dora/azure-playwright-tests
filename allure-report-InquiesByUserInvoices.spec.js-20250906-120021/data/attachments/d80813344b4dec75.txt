# Test info

- Name: InquireByUserInvoices_Click on Account Details
- Location: /home/runner/work/azure-playwright-tests/azure-playwright-tests/azure-repo/tests/InquiesByUserInvoices.spec.js:117:1

# Error details

```
Error: Timed out 30000ms waiting for expect(locator).toBeVisible()

Locator: locator('.MuiDataGrid-virtualScrollerRenderZone').first().locator('div[data-rowindex="1"]').locator('div[aria-colindex="4"]').locator('.blueLink')
Expected: visible
Received: <element(s) not found>
Call log:
  - expect.toBeVisible with timeout 30000ms
  - waiting for locator('.MuiDataGrid-virtualScrollerRenderZone').first().locator('div[data-rowindex="1"]').locator('div[aria-colindex="4"]').locator('.blueLink')

    at InquiryUserInvoices.clickonAccountDetails (/home/runner/work/azure-playwright-tests/azure-playwright-tests/azure-repo/PageObjects/InquiryUserInvoices.js:665:41)
    at /home/runner/work/azure-playwright-tests/azure-playwright-tests/azure-repo/tests/InquiesByUserInvoices.spec.js:119:29
```

# Page snapshot

```yaml
- complementary:
  - navigation:
    - list:
      - listitem:
        - img "logo"
      - heading "Selenium_QA" [level=5]
      - listitem:
        - link "Home":
          - /url: /home
          - img
          - text: Home
      - listitem:
        - link "Dashboard":
          - /url: /dashboard
          - img
          - text: Dashboard
      - listitem:
        - img
        - text: Favorites
        - list:
          - listitem:
            - link "Communication ~ All 0":
              - /url: /allactivities
          - listitem:
            - link "Communication ~ All 0":
              - /url: /allactivities
          - listitem:
            - link "Communication ~ All 0":
              - /url: /allactivities
          - listitem:
            - link "Communication ~ All 0":
              - /url: /allactivities
          - listitem:
            - link "Communication ~ All 0":
              - /url: /allactivities
          - listitem:
            - link "Communication ~ All 0":
              - /url: /allactivities
          - listitem:
            - link "CompanyMaintenance ~ All 0":
              - /url: /admin/master-files/company
      - listitem:
        - img
        - text: Messages
        - list:
          - listitem:
            - link "Error Sending Email 38":
              - /url: /messages/mail-not-read?Mode=ErrorSendMailAlert&AssignedUserKey=230&AlertDesc=Error Sending Email&SettingID=~All&Tiles
          - listitem:
            - link "Internal Message 0":
              - /url: /messages/mail-not-read?Mode=InternalMessage&AssignedUserKey=230&AlertDesc=Internal Message&SettingID=~All&Tiles
          - listitem:
            - link "Draft Activities 5":
              - /url: /messages/draft-activity
          - listitem:
            - link "Expected Payment Promise Broken 184":
              - /url: /messages/expected-payments?Mode=BrokenPromise&AssignedUserKey=230&AlertDesc=Expected Payment Promise Broken&Tiles
          - listitem:
            - link "Mail Not Read 1":
              - /url: /messages/mail-not-read?Mode=UnreadMailAlert&AssignedUserKey=230&AlertDesc=Mail Not Read&SettingID=~All&Tiles
          - listitem:
            - link "Followup Past Due 2258":
              - /url: /messages/followup-past-due?ExcludeFromRule=False&SettingID=~PastDue&AssignedUserKey=230&MaxToDoDate=2025-09-05&Tiles
          - listitem:
            - link "Mail Not Filed 53":
              - /url: /messages/mail-not-filed
          - listitem:
            - link "Pending Pmt NOT Reconciled 2":
              - /url: /messages/pending-payment-not-reconciled?Mode=PendPmtNotReconciled&AssignedUserKey=230&AlertDesc=Pending Pmt NOT Reconciled&Tiles
          - listitem:
            - link "Followup Due Today 0":
              - /url: /messages/followup-past-due?ExcludeFromRule=False&SettingID=~DueToday&AssignedUserKey=230&MaxToDoDate=2025-09-06&MinToDoDate=2025-09-06&Tiles
          - listitem:
            - link "Open Issue without Open Activity 0":
              - /url: /messages/mail-not-read?Mode=OrphanIssue&AssignedUserKey=230&AlertDesc=Open Issue without Open Activity&SettingID=~All&Tiles
          - listitem:
            - link "Pending Payment Declined During Last 7 Days 0":
              - /url: /messages/pending-payment-not-reconciled?Mode=PendPmtDeclined&AssignedUserKey=230&AlertDesc=Pending Payment Declined During Last 7 Days&Tiles
      - listitem:
        - img
        - text: Activities
        - list:
          - listitem:
            - link "Email only 28":
              - /url: /activities/email-only?Mode=RuleAlert&RuleKey=4722&AlertDesc=Email only
          - listitem:
            - link "Report Only 2":
              - /url: /activities/report-only?Mode=RuleAlert&RuleKey=4669&AlertDesc=Report Only
          - listitem:
            - link "Email & Report 28":
              - /url: /activities/email-&-report?Mode=RuleAlert&RuleKey=4670&AlertDesc=Email & Report
          - listitem:
            - link "Invoice Rep Group 27":
              - /url: /activities/invoice-rep-group?Mode=RuleAlert&RuleKey=4723&AlertDesc=Invoice Rep Group
          - listitem:
            - link "Customer Report Group 28":
              - /url: /activities/customer-report-group?Mode=RuleAlert&RuleKey=4724&AlertDesc=Customer Report Group
          - listitem:
            - link "Embedded Report Test 28":
              - /url: /activities/embedded-report-test?Mode=RuleAlert&RuleKey=4725&AlertDesc=Embedded Report Test
          - listitem:
            - link "No Send 27":
              - /url: /activities/no-send?Mode=RuleAlert&RuleKey=4726&AlertDesc=No Send
          - listitem:
            - link "Invoice Contact & Primary 28":
              - /url: /activities/invoice-contact-&-primary?Mode=RuleAlert&RuleKey=4727&AlertDesc=Invoice Contact & Primary
          - listitem:
            - link "Invoice Contact Mix 82":
              - /url: /activities/invoice-contact-mix?Mode=RuleAlert&RuleKey=4728&AlertDesc=Invoice Contact Mix
          - listitem:
            - link "Invoice Contact 1 & 2 84":
              - /url: /activities/invoice-contact-1-&-2?Mode=RuleAlert&RuleKey=4729&AlertDesc=Invoice Contact 1 & 2
          - listitem:
            - link "Invoice Contact 2 83":
              - /url: /activities/invoice-contact-2?Mode=RuleAlert&RuleKey=4730&AlertDesc=Invoice Contact 2
          - listitem:
            - link "Invoice Contact 1 50":
              - /url: /activities/invoice-contact-1?Mode=RuleAlert&RuleKey=4731&AlertDesc=Invoice Contact 1
      - listitem:
        - img
        - text: Accounts
        - list:
          - listitem:
            - link "All accounts 0":
              - /url: /accounts/all-accounts
      - listitem:
        - img
        - text: Inquiries
        - list:
          - listitem:
            - text: By Account
            - list:
              - listitem:
                - link "Statement":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/Statements.aspx
              - listitem:
                - link "Contacts":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/Contacts.aspx
              - listitem:
                - link "Invoices":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/Invoices.aspx
              - listitem:
                - link "Payments":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/Payments.aspx
              - listitem:
                - link "Contact":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/AccountInfo.aspx
                  - text: Contact Info
              - listitem:
                - link "PortalMessages":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/PortalMessages.aspx
                  - text: Messages
              - listitem:
                - link "CreditInquiry":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/CreditInquiry.aspx
                  - text: Credit Inquiry
          - listitem:
            - text: By User
            - list:
              - listitem:
                - link "Contacts":
                  - /url: /inquiries/by-user/contacts
              - listitem:
                - link "Activity Summary":
                  - /url: /inquiries/by-user/activity-summary
              - listitem:
                - link "Activities":
                  - /url: /allactivities
              - listitem:
                - link "Expected Payments":
                  - /url: /inquiries/by-user/expected-payments
              - listitem:
                - link "Follow-Up":
                  - /url: /inquiries/by-user/follow-up
              - listitem:
                - link "Mail":
                  - /url: /inquiries/by-user/mail
              - listitem:
                - link "Invoices":
                  - /url: /inquiries/by-user/invoices
              - listitem:
                - link "Payments":
                  - /url: /inquiries/by-user/payments
              - listitem:
                - link "Pending Payment":
                  - /url: /inquiries/by-user/pending-payments
              - listitem:
                - link "Scheduled Payments":
                  - /url: /inquiries/by-user/scheduled-payments
              - listitem:
                - link "Projected Cash Receipts":
                  - /url: /inquiries/by-user/projected-cash-receipts
              - listitem:
                - link "Reporting Group Logs":
                  - /url: /inquiries/by-user/reporting-group-logs
      - listitem:
        - img
        - text: Admin
        - list:
          - listitem:
            - text: Master Files
            - list:
              - listitem:
                - link "Activity Templates":
                  - /url: /admin/master-files/activity-template
              - listitem:
                - link "Activity Types":
                  - /url: /admin/master-files/activity-types
              - listitem:
                - link "Company":
                  - /url: /admin/master-files/company
              - listitem:
                - link "Credit Class":
                  - /url: /admin/master-files/credit-class
              - listitem:
                - link "Customer":
                  - /url: /admin/master-files/customer
              - listitem:
                - link "Communication Template":
                  - /url: /admin/master-files/communication-template
              - listitem:
                - link "Reason Code":
                  - /url: /admin/master-files/reason-code
              - listitem:
                - link "Report":
                  - /url: /admin/master-files/report
              - listitem:
                - link "Reporting Groups":
                  - /url: /admin/master-files/reporting-groups
              - listitem:
                - link "Sales Rep":
                  - /url: /admin/master-files/sales-rep
              - listitem:
                - link "UserMaint":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/UserMaintenance.aspx
                  - text: Users
              - listitem:
                - link "Message Settings":
                  - /url: /admin/master-files/message-settings
          - listitem:
            - text: Settings & Utilities
            - list:
              - listitem:
                - link "CountryMaint":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/CountryMaintenance.aspx
                  - text: Country
              - listitem:
                - link "ImportCustNotes":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/ImportNotes.aspx
                  - text: Import
              - listitem:
                - link "Logs":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/Logs.aspx
              - listitem:
                - link "MailRetrieval":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/Mailretrieval.aspx
                  - text: Mail Retrieval
              - listitem:
                - link "EntityMassUpdate":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/EntityMassUpdate.aspx
                  - text: Mass Update
              - listitem:
                - link "SiteOptions":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/SiteOptions.aspx
                  - text: Site Options
              - listitem:
                - link "SyncSoftware":
                  - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/SyncSchedulesMaintenance.aspx
                  - text: Sync Setup
          - listitem:
            - link "AgeCustomers":
              - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/AgeCustomers.aspx
              - text: Age Accounts 0
          - listitem:
            - link "GenerateActions":
              - /url: https://web-qa.lockstep.network//(S(bwpdxmxwnm3p1y5lxdoihkyn))/Pages/GenerateActions.aspx
              - text: Generate Actions 0
- img "Add to favorite"
- checkbox
- img
- text: Begin Typing Customer Name or ID ...
- combobox "Begin Typing Customer Name or ID ..."
- button "Open"
- img "Upload"
- button "Support/FAQ": Help
- text: Select User to Assign
- button "Select User to Assign": Selenium QA
- img "Inbox"
- text: "26"
- textbox
- img
- main:
  - text: View Settings
  - button "Select User to Assign": ~Open
  - checkbox "Show Invoice Lines"
  - text: Show Invoice Lines
  - heading "Total Amount 0.00" [level=5]
  - heading "Total Balance 0.00" [level=5]
  - grid:
    - button "FILTERS"
    - button "Select columns": Columns
    - button "Export To Excel"
    - button "Refresh"
    - button "Best Fit":
      - img
      - text: Best Fit
    - button "Density"
    - button "View Settings"
    - button "Alert"
    - button "Reports"
    - searchbox "Search…"
    - rowgroup:
      - row "Select all rows CompanyID CustID CustName Invoice Display Invoice Date Due Date Amount Balance DiscAmt DiscDate CopyPDFMessage AssignedUserID LastActivityNote LastActivityDate CurrID PaySched PmtTermsID CustPONo Reason Code InDispute ExcludeAging Resolved DisputeDate DisputeAmt DisputeCodeDate Dispute Note LastActivityUserID DueDateDays TranDateDays PrimarySperName PercentPaid DaysPaidLate LastPmtDate LastPmtAmt CustomerSperName InvcContactName InvcContactName2 OvrdInvcContact OvrdInvcContact2 Insert Date Update Date Do Not Sync":
        - columnheader "Select all rows":
          - checkbox "Select all rows"
        - columnheader "CompanyID"
        - columnheader "CustID"
        - columnheader "CustName"
        - columnheader "Invoice"
        - columnheader "Display"
        - columnheader "Invoice Date"
        - columnheader "Due Date"
        - columnheader "Amount"
        - columnheader "Balance"
        - columnheader "DiscAmt"
        - columnheader "DiscDate"
        - columnheader "CopyPDFMessage"
        - columnheader "AssignedUserID"
        - columnheader "LastActivityNote"
        - columnheader "LastActivityDate"
        - columnheader "CurrID"
        - columnheader "PaySched"
        - columnheader "PmtTermsID"
        - columnheader "CustPONo"
        - columnheader "Reason Code"
        - columnheader "InDispute"
        - columnheader "ExcludeAging"
        - columnheader "Resolved"
        - columnheader "DisputeDate"
        - columnheader "DisputeAmt"
        - columnheader "DisputeCodeDate"
        - columnheader "Dispute Note"
        - columnheader "LastActivityUserID"
        - columnheader "DueDateDays"
        - columnheader "TranDateDays"
        - columnheader "PrimarySperName"
        - columnheader "PercentPaid"
        - columnheader "DaysPaidLate"
        - columnheader "LastPmtDate"
        - columnheader "LastPmtAmt"
        - columnheader "CustomerSperName"
        - columnheader "InvcContactName"
        - columnheader "InvcContactName2"
        - columnheader "OvrdInvcContact"
        - columnheader "OvrdInvcContact2"
        - columnheader "Insert Date"
        - columnheader "Update Date"
        - columnheader "Do Not Sync"
      - row "Checkbox selection CompanyID CustID CustName Invoice Display Invoice Date Due Date Amount Balance DiscAmt DiscDate CopyPDFMessage AssignedUserID LastActivityNote LastActivityDate CurrID Select User to Assign Clear PmtTermsID CustPONo Reason Code DisputeDate DisputeAmt DisputeCodeDate Dispute Note LastActivityUserID DueDateDays TranDateDays PrimarySperName PercentPaid DaysPaidLate LastPmtDate LastPmtAmt CustomerSperName InvcContactName InvcContactName2 Insert Date Update Date Do Not Sync":
        - columnheader "Checkbox selection"
        - columnheader "CompanyID":
          - text: Contains
          - textbox "Contains"
        - columnheader "CustID":
          - text: Contains
          - textbox "Contains"
        - columnheader "CustName":
          - text: Contains
          - textbox "Contains"
        - columnheader "Invoice":
          - text: Contains
          - textbox "Contains"
        - columnheader "Display"
        - columnheader "Invoice Date":
          - text: Is
          - textbox "Is"
        - columnheader "Due Date":
          - text: Is
          - textbox "Is"
        - columnheader "Amount":
          - text: Equals
          - spinbutton "Equals"
        - columnheader "Balance":
          - text: Equals
          - spinbutton "Equals"
        - columnheader "DiscAmt":
          - text: Equals
          - spinbutton "Equals"
        - columnheader "DiscDate":
          - text: Is
          - textbox "Is"
        - columnheader "CopyPDFMessage":
          - text: Contains
          - textbox "Contains"
        - columnheader "AssignedUserID":
          - text: Contains
          - textbox "Contains"
        - columnheader "LastActivityNote":
          - text: Contains
          - textbox "Contains"
        - columnheader "LastActivityDate":
          - text: Is
          - textbox "Is"
        - columnheader "CurrID":
          - text: Contains
          - textbox "Contains"
        - columnheader "Select User to Assign Clear":
          - button "Select User to Assign Clear": Clear
        - columnheader "PmtTermsID":
          - text: Contains
          - textbox "Contains"
        - columnheader "CustPONo":
          - text: Contains
          - textbox "Contains"
        - columnheader "Reason Code":
          - text: Contains
          - textbox "Contains"
        - columnheader "Select User to Assign Clear":
          - button "Select User to Assign Clear": Clear
        - columnheader "Select User to Assign Clear":
          - button "Select User to Assign Clear": Clear
        - columnheader "Select User to Assign Clear":
          - button "Select User to Assign Clear": Clear
        - columnheader "DisputeDate":
          - text: Is
          - textbox "Is"
        - columnheader "DisputeAmt":
          - text: Equals
          - spinbutton "Equals"
        - columnheader "DisputeCodeDate":
          - text: Is
          - textbox "Is"
        - columnheader "Dispute Note":
          - text: Contains
          - textbox "Contains"
        - columnheader "LastActivityUserID":
          - text: Contains
          - textbox "Contains"
        - columnheader "DueDateDays":
          - text: Equals
          - spinbutton "Equals"
        - columnheader "TranDateDays":
          - text: Equals
          - spinbutton "Equals"
        - columnheader "PrimarySperName":
          - text: Contains
          - textbox "Contains"
        - columnheader "PercentPaid":
          - text: Equals
          - spinbutton "Equals"
        - columnheader "DaysPaidLate":
          - text: Equals
          - spinbutton "Equals"
        - columnheader "LastPmtDate":
          - text: Is
          - textbox "Is"
        - columnheader "LastPmtAmt":
          - text: Equals
          - spinbutton "Equals"
        - columnheader "CustomerSperName":
          - text: Contains
          - textbox "Contains"
        - columnheader "InvcContactName":
          - text: Contains
          - textbox "Contains"
        - columnheader "InvcContactName2":
          - text: Contains
          - textbox "Contains"
        - columnheader "Select User to Assign Clear":
          - button "Select User to Assign Clear": Clear
        - columnheader "Select User to Assign Clear":
          - button "Select User to Assign Clear": Clear
        - columnheader "Insert Date":
          - text: Is
          - textbox "Is"
        - columnheader "Update Date":
          - text: Is
          - textbox "Is"
        - columnheader "Do Not Sync":
          - text: Is
          - combobox:
            - option "any" [selected]
            - option "true"
            - option "false"
    - progressbar:
      - img
    - paragraph: "Rows per page:"
    - 'button "Rows per page: 20"': "20"
    - paragraph: 0–0 of 0
    - navigation "pagination navigation":
      - list:
        - listitem:
          - button "Go to previous page" [disabled]
        - listitem:
          - button "Go to next page" [disabled]
- iframe
- iframe
- iframe
- iframe
```

# Test source

```ts
  565 |
  566 |     async clickonDeleteView(){
  567 |         console.log('Clicking Delete View button in View Settings dialog...');
  568 |
  569 |         try {
  570 |             // Wait for the Delete View button to be visible
  571 |             await this.viewDelete.waitFor({ state: 'visible' });
  572 |             console.log('Delete View button is visible, clicking...');
  573 |
  574 |             // Click the Delete View button
  575 |             await this.viewDelete.click();
  576 |             console.log('Delete View button clicked successfully');
  577 |
  578 |             // Take a screenshot after clicking
  579 |             await this.takeScreenshot('delete-view-button-clicked');
  580 |
  581 |         } catch (error) {
  582 |             console.error(`Error clicking Delete View button: ${error.message}`);
  583 |             await this.takeScreenshot('delete-view-button-click-error');
  584 |             throw error;
  585 |         }
  586 |
  587 |         await this.viewDeleteOk.isVisible()
  588 |         console.log('Delete confirmation dialog is visible, clicking OK...');
  589 |         try {
  590 |             // Wait for the OK button in the delete confirmation dialog to be visible
  591 |             await this.viewDeleteOk.waitFor({ state: 'visible' });
  592 |             console.log('Delete confirmation OK button is visible, clicking...');
  593 |
  594 |             // Click the OK button to confirm deletion
  595 |             await this.viewDeleteOk.click();
  596 |             console.log('Delete confirmation OK button clicked successfully');
  597 |
  598 |             // Take a screenshot after clicking
  599 |             await this.takeScreenshot('delete-view-confirmation-ok-clicked');
  600 |
  601 |         } catch (error) {
  602 |             console.error(`Error clicking Delete confirmation OK button: ${error.message}`);
  603 |             await this.takeScreenshot('delete-confirmation-ok-click-error');
  604 |             throw error;
  605 |         }
  606 |
  607 |         await this.page.waitForTimeout(2000); // Wait for deletion to complete
  608 |         console.log('Waiting for deletion to complete...');
  609 |         await this.takeScreenshot('after-delete-view-confirmation');
  610 |         await this.viewDeleteConfirmation.isVisible()
  611 |
  612 |     }
  613 |
  614 |
  615 |
  616 |     async waitForPageStable(timeout = 5000) {
  617 |         try {
  618 |             // Wait for DOM content to be fully loaded
  619 |             await this.page.waitForLoadState('domcontentloaded', { timeout });
  620 |
  621 |             // Wait a bit for any animations to complete
  622 |             await this.page.waitForTimeout(500);
  623 |
  624 |             console.log("Page should be stable now");
  625 |         } catch (error) {
  626 |             console.warn(`Warning in waitForPageStable: ${error.message}`);
  627 |         }
  628 |         return this;
  629 |     }
  630 |
  631 |     async verifyFooterPagination(){
  632 |      
  633 |         for (let i = 1; i < (dataSet.PaginationCount); i ++)
  634 |         {
  635 |         await expect(this.footerPage.nth(i)).toBeVisible();
  636 |         await this.footerPage.nth(i).click()
  637 |         // await expect(this.pageLoadSymbol).toBeVisible();
  638 |         await expect(this.pageLoadSymbol).toBeHidden();
  639 |         
  640 |     }
  641 |         await expect(this.nextPageFooter).toBeVisible();
  642 |         await this.nextPageFooter.click();
  643 |         await expect(this.pageLoadSymbol).toBeHidden();
  644 |         await expect(this.backPageFooter).toBeVisible();
  645 |         await this.backPageFooter.click();
  646 |         await expect(this.pageLoadSymbol).toBeHidden();
  647 |         
  648 |     }
  649 |     async verifyTotalAmounAndBalanceVisible(){
  650 |      
  651 |         await expect(this.totalAmount).toBeVisible();
  652 |         await expect(this.totalBalance).toBeVisible()
  653 |     }
  654 |
  655 |     async clickonNewActivity(){
  656 |      
  657 |         await expect(this.rowSelection).toBeVisible()
  658 |         await this.rowSelection.click()
  659 |         await expect(this.newActivity).toBeVisible()
  660 |         await this.newActivity.click()
  661 |         await expect(this.newActivityPage).toBeVisible();
  662 |     }
  663 |
  664 |     async clickonAccountDetails(){
> 665 |         await expect(this.rowSelection).toBeVisible()
      |                                         ^ Error: Timed out 30000ms waiting for expect(locator).toBeVisible()
  666 |         await this.rowSelection.click()
  667 |         await expect(this.accountDetails).toBeVisible()
  668 |         await this.accountDetails.click()
  669 |         await this.verifyPageLoaded();
  670 |         await this.takeScreenshot('AccountDetails_Page_Loaded');
  671 |     }
  672 |     async performExcelValidations(data, sheetName) {
  673 |         console.log(`\n🔍 Performing validations on sheet: ${sheetName}`);
  674 |
  675 |         // Validation 1: Check if file has data
  676 |         expect(data.length).toBeGreaterThan(1); // At least header + 1 data row
  677 |         console.log(`✅ File contains data: ${data.length - 1} rows`);
  678 |
  679 |         // Validation 2: Check if headers exist
  680 |         const headers = data[0];
  681 |         expect(headers).toBeDefined();
  682 |         expect(headers.length).toBeGreaterThan(0);
  683 |         console.log(`✅ Headers found: ${headers.length} columns`);
  684 |
  685 |         // Validation 3: Check for expected columns (customize based on your data)
  686 |         const expectedColumns = ['Customer', 'Issue', 'Activity', 'Subject', 'Date']; // Adjust as needed
  687 |         const foundColumns = expectedColumns.filter(col =>
  688 |             headers.some(header => header && header.toString().toLowerCase().includes(col.toLowerCase()))
  689 |         );
  690 |         console.log(`✅ Expected columns found: ${foundColumns.join(', ')}`);
  691 |
  692 |         // Validation 4: Check for empty rows
  693 |         const dataRows = data.slice(1);
  694 |         const emptyRows = dataRows.filter(row => row.every(cell => !cell || cell.toString().trim() === ''));
  695 |         console.log(`📊 Empty rows found: ${emptyRows.length}`);
  696 |
  697 |         // Validation 5: Check data completeness
  698 |         if (dataRows.length > 0) {
  699 |             console.log(`\n📈 COLUMN STATISTICS:`);
  700 |             headers.forEach((header, colIndex) => {
  701 |                 const columnData = dataRows.map(row => row[colIndex]).filter(val => val !== undefined && val !== '');
  702 |                 const fillRate = ((columnData.length / dataRows.length) * 100).toFixed(1);
  703 |                 console.log(`  ${header || `Column ${colIndex + 1}`}: ${columnData.length}/${dataRows.length} (${fillRate}%)`);
  704 |             });
  705 |         }
  706 |
  707 |         // Validation 6: Check for duplicate rows
  708 |         const uniqueRows = new Set(dataRows.map(row => JSON.stringify(row)));
  709 |         const duplicateCount = dataRows.length - uniqueRows.size;
  710 |         console.log(`🔄 Duplicate rows found: ${duplicateCount}`);
  711 |
  712 |         // Validation 7: Basic data type checks
  713 |         if (dataRows.length > 0 && headers.length > 0) {
  714 |             console.log(`\n🔍 DATA TYPE ANALYSIS:`);
  715 |             headers.forEach((header, colIndex) => {
  716 |                 const columnData = dataRows.map(row => row[colIndex]).filter(val => val !== undefined && val !== '');
  717 |                 if (columnData.length > 0) {
  718 |                     const sampleValue = columnData[0];
  719 |                     let dataType = 'String';
  720 |
  721 |                     if (!isNaN(sampleValue) && !isNaN(parseFloat(sampleValue))) {
  722 |                         dataType = 'Number';
  723 |                     } else if (sampleValue && !isNaN(Date.parse(sampleValue))) {
  724 |                         dataType = 'Date';
  725 |                     }
  726 |
  727 |                     console.log(`  ${header || `Column ${colIndex + 1}`}: ${dataType} (Sample: ${sampleValue})`);
  728 |                 }
  729 |             });
  730 |         }
  731 |
  732 |         console.log(`✅ Excel validation completed successfully`);
  733 |     }
  734 |
  735 |     async verifyColumnFilter(){
  736 |
  737 |             
  738 |         await this.companyIDFilter.fill(dataSet.CompanyID);
  739 |         await expect(this.pageLoadSymbol).toBeVisible();
  740 |         await expect(this.pageLoadSymbol).toBeHidden();
  741 |         await this.page.screenshot({ path: 'CompanyID Filter.png' });
  742 |         await this.clearFilter.click()
  743 |         await expect(this.pageLoadSymbol).toBeVisible();
  744 |         await expect(this.pageLoadSymbol).toBeHidden();
  745 |
  746 |         await this.custNameFilter.fill(dataSet.CustName)
  747 |         await expect(this.pageLoadSymbol).toBeVisible();
  748 |         await expect(this.pageLoadSymbol).toBeHidden();
  749 |         await this.page.screenshot({ path: 'CustName Filter.png' });
  750 |         await this.clearFilter.click()
  751 |         await expect(this.pageLoadSymbol).toBeVisible();
  752 |         await expect(this.pageLoadSymbol).toBeHidden();
  753 |
  754 |         await this.custIDFilter.fill(dataSet.CustID);
  755 |         await expect(this.pageLoadSymbol).toBeVisible();
  756 |         await expect(this.pageLoadSymbol).toBeHidden();
  757 |         await this.page.screenshot({ path: 'CustID Filter.png' });
  758 |         await this.clearFilter.click()
  759 |         await expect(this.pageLoadSymbol).toBeVisible();
  760 |         await expect(this.pageLoadSymbol).toBeHidden();
  761 |
  762 |         await this.invoiceFilter.fill(dataSet.InvoiceID)
  763 |         await expect(this.pageLoadSymbol).toBeVisible();
  764 |         await expect(this.pageLoadSymbol).toBeHidden();
  765 |         await this.page.screenshot({ path: 'InvoiceID Filter.png' });
```