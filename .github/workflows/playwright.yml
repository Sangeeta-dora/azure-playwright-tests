name: Run Playwright Tests (Azure Repo)

permissions:
  contents: write
on:
  workflow_dispatch:   # allows manual run
    inputs:
      branch:
        description: 'Branch from Azure'
        required: true
        default: 'main'
      testFile:
        description: 'Test file to run'
        required: true
        default: 'tests/Admin_MasterFiles_ActivityType.spec.js'
      environment:     # ðŸ‘ˆ dropdown/input field when triggering
        description: "Environment to run tests against"
        required: true
        default: "qa"
      workers:
        description: 'Number of workers'
        required: false
        default: '4'  
      retry:
        description: "Number of retries for failed tests (0 = no retries)"
        required: false
        default: '0'   

jobs:
  playwright-test:
    runs-on: ubuntu-latest

    steps:
      - name: Clone Azure Repo
        run: |
          git clone --branch ${{ github.event.inputs.branch }} https://AnytimeCollect:${{ secrets.AZURE_PAT }}@dev.azure.com/AnytimeCollect/Lockstep/_git/TestCases-ReactATC azure-repo
        env:
          GIT_ASKPASS: /bin/echo
          GIT_USERNAME: Lockstep   # usually your Azure DevOps org name
          GIT_PASSWORD: ${{ secrets.AZURE_PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd azure-repo
          npm install

      - name: Install Playwright Browsers
        run: |
          cd azure-repo
          npx playwright install --with-deps    

      - name: Run Playwright Tests
        run: |
          cd azure-repo
          echo "::group::Running Playwright Tests"
          npx cross-env ENVIRONMENT=${{ github.event.inputs.environment }} PLAYWRIGHT_SCREENSHOT=on PLAYWRIGHT_VIDEO=on PLAYWRIGHT_TRACE=retain-on-failure playwright test tests/Admin_MasterFiles_ActivityType.spec.js --reporter=list,html --workers=${{ github.event.inputs.workers }} --retries=${{ github.event.inputs.retry }} || true
          echo "::endgroup::"

      - name: Verify Playwright HTML Report
        run: |
          cd azure-repo
          echo "Report folder contents:"
          ls -l playwright-report
          
      - name: Sanitize test file name
        id: sanitize
        run: |
          filename=$(basename "${{ github.event.inputs.testFile }}")
          echo "filename=$filename" >> $GITHUB_OUTPUT   
          
      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ steps.sanitize.outputs.filename }}
          path: azure-repo/playwright-report

      - name: Deploy Playwright Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./azure-repo/playwright-report
          publish_branch: gh-pages  
          force_orphan: true
